module.exports = {
  env: {
    browser: true,
    es2021: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'standard-with-typescript',
    'plugin:@typescript-eslint/recommended',
    'react-app',
  ],
  overrides: [],
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  plugins: ['react'],
  rules: {
    'react/jsx-filename-extension': ['error', { extensions: ['.jsx', '.tsx'] }],
    semi: 'error',
    quotes: ['error', 'double'],
    curly: 2,
    eqeqeq: 0,
    'comma-dangle': 'ignore',
    'no-undef': 'error',
    'object-curly-newline': 'always',
    'max-statements-per-line': ['error', { max: 1 }],
    'max-len': [
      'error',
      {
        max: 50,
        tabWidth: 2,
        ignoreUrls: true,
        ignoreComments: true,
        ignoreStrings: true,
        ignoreTemplateLiterals: true,
        ignoreRegExpLiterals: true,
        ignorePattern: true,
        ignoreTrailingComments: true,
      },
    ],
    'jsx-quotes': ['error', 'prefer-double'],
    indent: [
      'error',
      2,
      {
        ignoredNodes: ['ConditionalExpression'],
        MemberExpression: 1,
        FunctionExpression: { parameters: 'first' },
        ArrayExpression: 1,
        ObjectExpression: 1,
        ImportDeclaration: 1,
        flatTernaryExpressions: false,
      },
    ],
    'block-spacing': 'always',
    'brace-style': ['error', 'stroustrup'],
    'arrow-spacing': 'error',
    'array-bracket-spacing': 'error',
    'array-bracket-newline': ['error', { minItems: 2 }],
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'no-extra-semi': 'error',
    'default-case': 'error',
    'block-scoped-var': 'error',
    'arrow-body-style': [
      'error',
      'always',
      { requireReturnForObjectLiteral: false },
    ],
    camelcase: ['error', 'always', { ignoreImports: true }],
  },
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx'],
      },
    },
  },
};
